## fonction nominatim_osm propos√©e par D.Kisler
if(suppressWarnings(is.null(address)))  return(data.frame())
tryCatch(
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'http://nominatim.openstreetmap.org/search/@addr@?format=json&addressdetails=0&limit=1')
), error = function(c) return(data.frame())
)
if(length(d) == 0) return(data.frame())
return(c(as.numeric(d$lon), as.numeric(d$lat)))
}
tableau <- t(sapply(adresses,nominatim_osm))
colnames(tableau) <- c("lon","lat")
return(tableau)
}
library(leaflet)
mygeocode('Universite Rennes 2')
rennes2 = mygeocode('Universite Rennes 2')
rennes2
leaflet(rennes2) %>% addTiles() %>% addMarkers(~lon, ~lat)
leaflet(data = rennes2) %>% addTiles() %>% addMarkers(~lon, ~lat)
rennes2 <-  mygeocode('Universite Rennes 2')
rennes2
leaflet(data = rennes2) %>% addTiles() %>% addMarkers(~lon, ~lat)
leaflet() %>% addTiles() %>% addMarkers(rennes2$lon, rennes2$lat)
rennes2[1]
leaflet() %>% addTiles() %>% addMarkers(rennes2$lon, rennes2$lat)
rennes2[1]
rennes2 <-  mygeocode('Universite Rennes 2')
leaflet() %>% addTiles() %>% addMarkers(rennes2[1], rennes2[2])
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], 'SALUT')
rennes2 <-  mygeocode('Universite rennes 2')
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], 'SALUT')
rennes2 <-  mygeocode('Universite rennes villejean')
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], 'SALUT')
rennes2 <-  mygeocode('Universite rennes campus villejean')
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], 'SALUT')
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], 'https://www.univ-rennes2.fr/')
leaflet() %>% addTiles() %>% addPopups(rennes2[1], rennes2[2], '<a href = https://www.univ-rennes2.fr/> UNIVERSITE </a>')
knitr::opts_chunk$set(echo = TRUE)
d <- jsonlite::fromJSON(
gsub('\\@addr\\@', gsub('\\s+', '\\%20', address),
'https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json')
)
if (!(require(jsonlite))) install.packages("jsonlite")
d <- jsonlite::fromJSON('https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json')
d
velo <- jsonlite::fromJSON('https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json')
velo
velo <- jsonlite::fromJSON('https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json')$data$stations
View(velo)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~long)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~long)
library(tidyverse)
library(leaflet)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~long)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = ("<h1>"+ ~name + "</h1> <p> Nombre de velo dispo:" + ~as.character(capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = ("<h1>"+ ~as.character(name) + "</h1> <p> Nombre de velo dispo:" + ~as.character(capacity)))
"<h1>"+ ~as.character(name) + "</h1> <p> Nombre de velo dispo:" + ~as.character(capacity)
~as.character(name)
as.character(velo$name)
as.character(velo$capacity)
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = ("<h1>"+ ~as.character(name) + "</h1> <p> Nombre de velo dispo:" + ~as.character(capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = paste("<h1>"  ~as.character(name) + "</h1> <p> Nombre de velo dispo:" + ~as.character(capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = paste("<h1>",  ~as.character(name), "</h1> <p> Nombre de velo dispo:" , ~as.character(capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lat, ~lon, popup = paste("<h1>",  as.character(~name), "</h1> <p> Nombre de velo dispo:" , as.character(~capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(~name), "</h1> <p> Nombre de velo dispo:" , as.character(~capacity)))
leaflet(data = velo) %>% addTiles() %>% addMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)))
leaflet(data = velo) %>% addTiles() %>% addCluster(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)))
ColorPal1 <- colorNumeric(scales::seq_gradient_pal(low = "#132B43", high = "#56B1F7",
space = "Lab"), domain = c(0,1))
ColorPal2 <- colorNumeric(scales::seq_gradient_pal(low = "red", high = "black",
space = "Lab"), domain = c(0,1))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color = ColorPal1)
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color = velo$capacity)
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color = ColorPal1(velo$capacity))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color = ColorPal2(velo$capacity))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color =  ~ColorPal2(capacity))
velo <- jsonlite::fromJSON('https://velib-metropole-opendata.smoove.pro/opendata/Velib_Metropole/station_information.json')$data$stations
ColorPal1 <- colorNumeric(scales::seq_gradient_pal(low = "#132B43", high = "#56B1F7",
space = "Lab"), domain = c(0,1))
ColorPal2 <- colorNumeric(scales::seq_gradient_pal(low = "red", high = "black",
space = "Lab"), domain = c(0,1))
leaflet(data = velo) %>% addTiles() %>% addCircleMarkers(~lon, ~lat, popup = paste("<h1>",  as.character(velo$name), "</h1> <p> Nombre de velo dispo:" , as.character(velo$capacity)), color =  ~ColorPal2(capacity))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
ctrl <- trainControl(method="cv")
n <- 2000
set.seed(12345)
X1 <- runif(n)
X2 <- runif(n)
set.seed(9012)
R1 <- X1<=0.25
R2 <- (X1>0.25 & X2>=0.75)
R3 <- (X1>0.25 & X2<0.75)
Y <- rep(0,n)
Y[R1] <- rbinom(sum(R1),1,0.25)
Y[R2] <- rbinom(sum(R2),1,0.25)
Y[R3] <- rbinom(sum(R3),1,0.75)
donnees <- data.frame(X1,X2,Y)
donnees$Y <- as.factor(donnees$Y)
ggplot(donnees)+aes(x=X1,y=X2,color=Y)+geom_point()
dapp = donnees[sample(nrow(donnees), 1500),]
dtest = donnees[-as.numeric(row.names(dapp)),]
library(class)
knn3 <- knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=3)
mean(knn3!=dtest$Y)
ctrl <- trainControl(method="cv")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(caret)
ctrl <- trainControl(method="cv")
gr <- data.frame(k=seq(1,100, by= 20))
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
a
gr <- data.frame(k=seq(1,500, by= 20))
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
gr <- data.frame(k=seq(1,500, by= 20))
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
dapp = donnees[sample(nrow(donnees), 1500),]
dtest = donnees[-as.numeric(row.names(dapp)),]
library(class)
library(caret)
knn3 <- knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=3)
mean(knn3!=dtest$Y)
ctrl <- trainControl(method="cv")
gr <- data.frame(k=seq(1,500, by= 20))
a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
ctrl
knn3 <- knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=3)
knn3
mean(knn3!=dtest$Y)
prev.cv <- knn.cv[donnees, cl= donnee$y, k=3]
donnees <- data.frame(X1,X2,Y)
donnees$Y <- as.factor(donnees$Y)
donnees
prev.cv <- knn.cv[donnees, cl= donnee$y, k=3]
prev.cv <- knn.cv[donnees, cl= donnee$y, k=3]
prev.cv <- knn.cv[donnees[,3], cl= donnee$y, k=3]
prev.cv <- knn.cv[donnees[,-3], cl= donnee$y, k=3]
donnee
prev.cv <- knn.cv[donnees[,-3], cl= donnee$y, k=3]
donnees
prev.cv <- knn.cv[donnees, cl= donnees$y, k=3]
prev.cv <- knn.cv[donnees[,3], cl= donnees$y, k=3]
prev.cv <- knn.cv[donnees[,3:], cl= donnees$y, k=3]
prev.cv <- knn.cv[donnees[,1], cl= donnees$y, k=3]
prev.cv <- knn.cv[donnees[,1:2], cl= donnees$y, k=3]
prev.cv <- knn.cv[donnees[,1:2], cl= donnees$Y, k=3]
donnees$Y
knn.cv[donnees[,1:2], cl= donnees$Y, k=3]
prev.cv <- knn.cv(donnees[,1:2], cl= donnees$Y, k=3)
prev.cv
mean(prev.cv!=dtest$Y)
prev.cv <- knn.cv(donnees[,1:2], cl= donnees$Y, k=3)
mean(prev.cv!=dtest$Y)
mean(prev.cv!=donnees$Y)
prev.cv <- knn.cv(donnees[,1:2], cl= donnees$Y, k=3)
mean(prev.cv!=donnees$Y)
knn3 <- knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=3)
mean(knn3!=dtest$Y)
err.ho <- rep(0,length(K_cand))
K_cand <- seq(1,500,by=20)
err.ho <- rep(0,length(K_cand))
err.ho
err.ho[20] <- rep(0,length(K_cand))
K_cand <- seq(1,500,by=20)
err.ho <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
knn4 = knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=K_cand[i])
err.ho[i] = mean(knn4!=dtest$Y)
}
err.ho
for (i in 1:length(K_cand)){
prev.cv1 <- knn.cv(donnees[,1:2], cl= donnees$Y, k=K_cand[i])
err.loo[i] <- mean(prev.cv1!=donnees$Y)
}
err.loo <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
prev.cv1 <- knn.cv(donnees[,1:2], cl= donnees$Y, k=K_cand[i])
err.loo[i] <- mean(prev.cv1!=donnees$Y)
}
err.loo
which.min(err.ho)
K_cand[which.min(err.ho)]
K_cand[which.min(err.loo)]
K_cand[which.min(err.ho)]
K_cand[which.min(err.loo)]
K_cand
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
blocs
prev
prev <- donnees$Y
err.cv <- rep(0,length(K_cand))
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
prev
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
n <- 2000
set.seed(12345)
X1 <- runif(n)
X2 <- runif(n)
set.seed(9012)
R1 <- X1<=0.25
R2 <- (X1>0.25 & X2>=0.75)
R3 <- (X1>0.25 & X2<0.75)
Y <- rep(0,n)
Y[R1] <- rbinom(sum(R1),1,0.25)
Y[R2] <- rbinom(sum(R2),1,0.25)
Y[R3] <- rbinom(sum(R3),1,0.75)
donnees <- data.frame(X1,X2,Y)
donnees$Y <- as.factor(donnees$Y)
ggplot(donnees)+aes(x=X1,y=X2,color=Y)+geom_point()
dapp = donnees[sample(nrow(donnees), 1500),]
dtest = donnees[-as.numeric(row.names(dapp)),]
library(class)
library(caret)
knn3 <- knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=3)
mean(knn3!=dtest$Y)
#ctrl <- trainControl(method="cv")
#gr <- data.frame(k=seq(1,500, by= 20))
#a <- train(Y~.,data=donnees,method="knn",tuneGrid=gr,trControl=ctrl)
donnees
prev.cv <- knn.cv(donnees[,1:2], cl= donnees$Y, k=3)
mean(prev.cv!=donnees$Y)
K_cand <- seq(1,500,by=20)
err.ho <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
knn4 = knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=K_cand[i])
err.ho[i] = mean(knn4!=dtest$Y)
}
K_cand[which.min(err.ho)]
err.loo <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
prev.cv1 <- knn.cv(donnees[,1:2], cl= donnees$Y, k=K_cand[i])
err.loo[i] <- mean(prev.cv1!=donnees$Y)
}
K_cand[which.min(err.loo)]
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
dapp[,1:2]
err.cv[i] <- mean(prev!=donnees$Y)
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-bloc[[j]]] <- knn(donnees[bloc[j], 1:2], donnees[-bloc[j], 1:2], k= K_cand[i])
}
err.cv[i] <- mean(prev!=donnees$Y)
}
set.seed(2345)
blocs <- caret::createFolds(1:nrow(donnees),10,returnTrain = TRUE)
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-blocs[[j]]] <- knn(donnees[blocs[j], 1:2], donnees[-blocs[j], 1:2], k= K_cand[i])
}
err.cv[i] <- mean(prev!=donnees$Y)
}
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2], k= K_cand[i])
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2], k= K_cand[i])
}
err.cv[i] <- mean(prev!=donnees$Y)
}
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2],cl= donnees[blocs[[j]], 3] k= K_cand[i])
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2],cl= donnees[blocs[[j]], 3] k= K_cand[i])
err.cv <- rep(0,length(K_cand))
prev <- donnees$Y
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2],cl= donnees[blocs[[j]], 3], k= K_cand[i])
}
err.cv[i] <- mean(prev!=donnees$Y)
}
for (i in 1:length(K_cand)){
for (j in 1:length(blocs)){
prev[-blocs[[j]]] <- knn(donnees[blocs[[j]], 1:2], donnees[-blocs[[j]], 1:2],cl= donnees[blocs[[j]], 3], k= K_cand[i])
}
err.cv[i] <- mean(prev!=donnees$Y)
}
which.min(err.cv)
K_cand[which.min(err.cv)]
prev
K_cand <- seq(1,500,by=20)
err.ho <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
knn4 = knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=K_cand[i])
err.ho[i] = mean(knn4!=dtest$Y)
}
K_cand[which.min(err.ho)]
K_cand <- seq(1,500,by=20)
err.ho <- rep(0,length(K_cand))
for (i in 1:length(K_cand)){
knn4 = knn(dapp[,1:2],dtest[,1:2],cl=dapp$Y,k=K_cand[i])
err.ho[i] = mean(knn4!=dtest$Y)
}
K_cand[which.min(err.ho)]
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
setwd("C:/Users/caill/Dropbox/M1/S2/R/VISUDATA/Projet")
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
museefreq <- data.frame()
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
museefreq <- data.frame()
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
museefreq <- list.musee[[1]]
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
View(museefreq)
loc_musee <- read_delim('liste-et-localisation-des-musees-de-france.csv',delim = ';')
View(loc_musee)
View(loc_musee)
View(museefreq)
View(museefreq)
musee <- inner_join(loc_musee, museefreq, by = c('ref_musee','id'))
musee <- inner_join(loc_musee, museefreq, by = c('ref_musee'='id'))
View(musee)
View(musee)
View(loc_musee)
View(loc_musee)
loc_musee <- loc_musee[,-16]
View(loc_musee)
View(loc_musee)
loc_musee <- read_delim('liste-et-localisation-des-musees-de-france.csv',delim = ';')
loc_musee <- loc_musee %>% select(c(2,6,8,14,15))
loc_musee
library(tidyverse)
net <- function(data){
museefreq = read_csv(data, locale=locale())
date = museefreq$year[1]
museefreq <- museefreq %>%
filter(country == 'France', status == 'open') %>%
select(!c(website, phone, fax, description, tags, year))
if (date != 2018){
museefreq <- museefreq %>% select(id,stats)
}
pdate <- paste('payant', date, sep = '.')
gdate <- paste('gratuit',date, sep ='.')
tdate <-paste('total',date, sep ='.')
museefreq <-  museefreq %>%
separate(stats, c(pdate, gdate, 'label-date'), sep = ';') %>%
select(!`label-date`)
museefreq[,pdate]<-  as.numeric(apply(as.matrix(museefreq[,pdate]),1, substring,first=8))
museefreq[,gdate] <-  as.numeric(apply(as.matrix(museefreq[,gdate]),1, substring,first=9))
museefreq[,tdate] <- museefreq[,pdate] + museefreq[,gdate]
return(museefreq)
}
lmusee = paste('frequentation-musees-de-france-',2018:2013,'.csv',sep = '')
list.musee = lapply(lmusee, net)
museefreq <- list.musee[[1]]
for (i in 2:(length(list.musee))){
museefreq <- inner_join(museefreq, list.musee[[i]])
}
loc_musee <- read_delim('liste-et-localisation-des-musees-de-france.csv',delim = ';')
loc_musee <- loc_musee %>% select(c(2,6,8,14,15))
musee <- inner_join(loc_musee, museefreq, by = c('ref_musee'='id'))
museefreq <-  museefreq %>% filter(lon > (-20) & lon < 25)
